/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
{{behaviour_includes}}

/*
ル	、 
kana_ru_comma,kruc

ン	。
kana_n_period,knp

ク	（
kana_ku_curl_open,kkuco

ス	）
kana_su_curl_close,ksucc

ト	「
kana_to_double_quote_open,ktodqo

テ	」
kana_te_double_quote_close,ktedqc

ノ	・
kana_no_middle_dot,knomd

キ	？
kana_ki_question_mark,kkiqm

コ	！
kana_ko_exclamation_mark,kkoem

wa_wo_swap,wwswap
*/
/ {
  behaviors {
    #include "macros.dtsi"

    kruc: kana_ru_comma {
        compatible = "zmk,behavior-mod-morph";
        label = "KANA_RU_COMMA";
        #binding-cells = <0>;
        bindings = <&kp DOT>, <&kp LS(COMMA)>;
        mods = <(MOD_RSFT)>;
    };
    knp: kana_n_period {
        compatible = "zmk,behavior-mod-morph";
        label = "KANA_N_DOT";
        #binding-cells = <0>;
        bindings = <&kp Y>, <&kp LS(DOT)>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    kkuco: kana_ku_curl_open {
        compatible = "zmk,behavior-mod-morph";
        label = "KANA_KU_CURL_OPEN";
        #binding-cells = <0>;
        bindings = <&kp H>, <&kp LA(RS(N9))>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    ksucc: kana_su_curl_close {
        compatible = "zmk,behavior-mod-morph";
        label = "KANA_SU_CURL_CLOSE";
        #binding-cells = <0>;
        bindings = <&kp R>, <&kp LA(RS(N0))>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    ktodqo: kana_to_double_quote_open {
        compatible = "zmk,behavior-mod-morph";
        label = "KANA_TO_DOUBLE_QUOTE_OPEN";
        #binding-cells = <0>;
        bindings = <&kp S>, <&kp LS(EQUAL)>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    ktedqc: kana_te_double_quote_close {
        compatible = "zmk,behavior-mod-morph";
        label = "KANA_TE_DOUBLE_QUOTE_CLOSE";
        #binding-cells = <0>;
        bindings = <&kp W>, <&kp LS(LEFT_BRACKET)>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    knomd: kana_no_middle_dot {
        compatible = "zmk,behavior-mod-morph";
        label = "KANA_NO_MIDDLE_DOT";
        #binding-cells = <0>;
        bindings = <&kp K>, <&kp LS(SLASH)>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    kkiqm: kana_ki_question_mark {
        compatible = "zmk,behavior-mod-morph";
        label = "KANA_KI_QUESTION_MARK";
        #binding-cells = <0>;
        bindings = <&kp G>, <&kp LA(RS(SLASH))>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    kkoem: kana_ko_exclamation_mark {
        compatible = "zmk,behavior-mod-morph";
        label = "KANA_KO_EXCLAMATION_MARK";
        #binding-cells = <0>;
        bindings = <&kp B>, <&kp LA(RS(N1))>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    wwswap: wa_wo_swap {
        compatible = "zmk,behavior-mod-morph";
        label = "WA_WO_SWAP";
        #binding-cells = <0>;
        bindings = <&kp RS(N0)>, <&kp N0>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
    };

{{behaviour_definitions}}
  };

    keymap {
        compatible = "zmk,keymap";

{{rendered_layers}}
    };
};